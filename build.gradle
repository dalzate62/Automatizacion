apply plugin: 'java-library'
// Para agregar un comando que se llama aggregate, que es de Serenity y es para construir el reporte
apply plugin: 'net.serenity-bdd.aggregator'

//repositorio para el codigo fuente
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

//repositorio y dependencias para configurar gradle
// Es para descargar las dependencias que configuraran a Gradle como tal, no hacen parte del codigo fuente.
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.2.0"
    }
}

//dependencias del codigo fuente
dependencies {

    implementation 'net.serenity-bdd:serenity-screenplay:3.2.0'
    implementation 'net.serenity-bdd:serenity-junit:3.2.0'
    implementation 'net.serenity-bdd:serenity-cucumber:3.2.0'
    implementation 'net.serenity-bdd:serenity-core:3.2.0'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    testImplementation 'junit:junit:4.13.1'
    implementation group: 'org.apache.poi', name: 'poi', version: '3.17'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'

    implementation 'net.serenity-bdd:serenity-ensure:3.2.0'





}

// Para configurar propiedades del comando de ejecucion de pruebas con Gradle
test {
//Ignorar los fallos es ejecutar todas las pruebas asi alguna falle
    ignoreFailures = true
}

// Configurar el encoding del proyecto
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Continue asi falle alguna tarea de Gradle
gradle.startParameter.continueOnFailure = true